#pragma once
#include "base/ccConfig.h"

#include "cocos/scripting/js-bindings/jswrapper/SeApi.h"

extern se::Object* __jsb_sdkbox_PluginGoogleAnalytics_proto;
extern se::Class* __jsb_sdkbox_PluginGoogleAnalytics_class;

bool js_register_sdkbox_PluginGoogleAnalytics(se::Object* obj);
bool register_all_PluginGoogleAnalyticsJS(se::Object* obj);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_createTracker);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_setMetric);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_stopPeriodicalDispatch);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_logECommerce);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_setDryRun);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_logEvent);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_enableExceptionReporting);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_dispatchPeriodically);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_init);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_logScreen);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_startSession);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_logException);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_setUser);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_stopSession);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_setDimension);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_logSocial);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_enableAdvertisingTracking);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_dispatchHits);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_enableTracker);
SE_DECLARE_FUNC(js_PluginGoogleAnalyticsJS_PluginGoogleAnalytics_logTiming);

